{"ast":null,"code":"var _jsxFileName = \"/Users/francoisbeaujean/App/redux-app/src/components/DisplayMessages.jsx\";\nimport React from 'react';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux'; // ACTIONS\n\nconst ADD = 'ADD';\n\nconst addMessage = message => {\n  return {\n    type: ADD,\n    message\n  };\n}; // REDUCER\n\n\nconst messageReducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD:\n      return [...state, action.message];\n\n    default:\n      return state;\n  }\n\n  ;\n}; // STORE\n\n\nconst store = createStore(messageReducer); // REACT\n\nclass Presentational extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  submitMessage() {\n    this.props.submitNewMessage(this.state.input);\n    this.setState({\n      input: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Type in a new Message:\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.input,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.props.messages.map((message, idx) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, message);\n    })));\n  }\n\n}\n\n; // ACCES ET DISPATCH AU STORE\n\nconst mapStateToProps = state => {\n  return {\n    messages: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitNewMessage: function (message) {\n      dispatch(addMessage(message));\n    }\n  };\n}; // CONNECTER AU COMPOSANT \n\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Presentational);\n\nclass AppWrapper extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nexport default AppWrapper;","map":{"version":3,"sources":["/Users/francoisbeaujean/App/redux-app/src/components/DisplayMessages.jsx"],"names":["React","createStore","Provider","connect","ADD","addMessage","message","type","messageReducer","state","action","store","Presentational","Component","constructor","props","input","handleChange","bind","submitMessage","e","setState","target","value","submitNewMessage","render","messages","map","idx","mapStateToProps","mapDispatchToProps","dispatch","Container","AppWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\n\n// ACTIONS\n\nconst ADD = 'ADD';\n\nconst addMessage = (message) => {\n    return {\n        type: ADD,\n        message\n    };\n};\n\n// REDUCER\n\nconst messageReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD:\n            return [...state, action.message];\n        default:\n            return state;\n    };\n};\n\n// STORE\n\nconst store = createStore(messageReducer);\n\n// REACT\n\nclass Presentational extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.submitMessage = this.submitMessage.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            input: e.target.value\n        });\n    };\n\n    submitMessage() {\n        this.props.submitNewMessage(this.state.input)\n        this.setState({\n            input: ''\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h2>Type in a new Message:</h2>\n                <input\n                    value={this.state.input}\n                    onChange={this.handleChange} /><br />\n                <button onClick={this.submitMessage}>Submit</button>\n                <ul>\n                    {this.props.messages.map((message, idx) => {\n                        return (\n                            <li key={idx}>{message}</li>\n                        )\n                    })\n                    }\n                </ul>\n            </div>\n        );\n    }\n};\n\n// ACCES ET DISPATCH AU STORE\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitNewMessage: function (message) {\n            dispatch(addMessage(message))\n        }\n    };\n};\n\n// CONNECTER AU COMPOSANT \n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Presentational)\n\nclass AppWrapper extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Container />\n            </Provider>\n        )\n    }\n};\n\n\nexport default AppWrapper;\n\n\n"]},"metadata":{},"sourceType":"module"}